{"version":3,"sources":["webpack:///./src/App.tsx","webpack:///./src/FaceitApi.ts","webpack:///./assets/default_avatar.jpg","webpack:///./src/style.scss?75ba","webpack:///./src/style.scss"],"names":["logObservable","observable$","name","useSubscription","v","console","log","Search","searhResultsListRef","useRef","input","setInput","searchTerm$","useObservable","inputs$","pipe","pluckFirst","filter","length","debounceTime","loadMoreEvents$","flatMap","ref","fromEvent","current","map","event","target","Error","node","scrollTop","loadMorePoint","Math","max","scrollHeight","clientHeight","throttleTime","results$","switchMap","searchTerm","scan","acc","_","startWith","mergeMap","page","searchPlayer","items","next","concat","results","useObservableState","className","type","value","onChange","e","currentTarget","result","idx","SearchResultPlayer","key","player_id","Link","to","src","avatar","nickname","PlayerDetails","playerId","player$","$inputs","getPlayer","showJson","setShowJson","player","country","href","steam_id_64","games","csgo","faceit_elo","onClick","DebugValue","MatchList","matches$","getMatchHistory","matches","match","Match","match_id","matchId","match$","getMatch","undefined","version","MatchV2","MatchV1","time","isInTeam","team","roster","find","p","TeamName","open","setOpen","winnerTeam","teams","winner","winOrLoss","faction1","faction2","started_at","DateTime","fromSeconds","toRelative","MatchV2Details","playerList","JSON","stringify","render","HashRouter","Route","path","document","getElementById","callApi","method","params","url","searchParams","URLSearchParams","Object","entries","forEach","append","toString","mkQueryString","Observable","observer","abortController","AbortController","requestDone","fetch","headers","signal","then","response","complete","err","error","abort","offset","limit","game","String","from","json","api","content","__esModule","default","module","i","options","exported","locals","exports","___CSS_LOADER_API_IMPORT___","push"],"mappings":"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","file":"0.bundle.bd835bf2893b8356bc33.js","sourcesContent":["import React, {useRef, useState} from \"react\"\nimport {render} from \"react-dom\"\nimport {pluckFirst, useObservable, useObservableState, useSubscription} from \"observable-hooks\"\nimport {\n  debounceTime,\n  filter,\n  flatMap,\n  map,\n  mergeMap,\n  scan,\n  startWith,\n  switchMap,\n  throttleTime\n} from \"rxjs/operators\"\nimport {\n  getMatch,\n  getMatchHistory,\n  getPlayer,\n  GetSearchPlayersResponse$Player,\n  searchPlayer,\n  GetMatchResponse$MatchV2,\n  GetMatchResponse$MatchV2$Faction,\n  GetMatchResponse$MatchV1,\n  GetPlayerResponse\n} from \"./FaceitApi.ts\"\nimport {DateTime} from \"luxon\"\n\nimport DefaultAvatar from \"../assets/default_avatar.jpg\"\n\nimport \"./style.scss\"\nimport {HashRouter, Link, Route, useParams} from \"react-router-dom\"\nimport {fromEvent, Observable, OperatorFunction, pipe} from \"rxjs\"\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Search />\n      <div className=\"main-content\">\n        <Route path=\"/player/:playerId\">\n          <PlayerDetails />\n        </Route>\n      </div>\n    </HashRouter>\n  )\n}\n\nconst logObservable = (observable$: Observable<any>, name: string) =>\n  useSubscription(observable$, v => console.log(name, v))\n\nfunction Search() {\n  const PAGE_SIZE = 100\n\n  const searhResultsListRef = useRef<HTMLUListElement | null>(null)\n\n  const [input, setInput] = useState('asd')\n  const searchTerm$: Observable<string> = useObservable(\n    inputs$ => inputs$.pipe(\n      pluckFirst,\n      filter(input => input.length >= 3),\n      debounceTime(300)\n    ),\n    [input]\n  )\n  logObservable(searchTerm$, \"searchTerm$\")\n\n  // TODO real scroll events\n  const loadMoreEvents$ = useObservable(inputs$ => inputs$.pipe(\n    pluckFirst,\n    flatMap(ref => fromEvent(ref.current!, \"scroll\")),\n    map(event => {\n      if (!event.target) throw Error(\"fug\")\n      const node = event.target as HTMLUListElement\n      const distanceToBottomBeforeLoadingMore = 500\n      return {\n        scrollTop: node.scrollTop,\n        loadMorePoint: Math.max(0, node.scrollHeight - node.clientHeight - distanceToBottomBeforeLoadingMore),\n      }\n    }),\n    filter(({ scrollTop, loadMorePoint }) => scrollTop > loadMorePoint),\n    throttleTime(1000)\n  ), [searhResultsListRef])\n\n  const countEvents = (): OperatorFunction<unknown, number> =>\n    pipe(scan((acc, _) => acc + 1, 0), startWith(0))\n  const concatEvents = <T extends unknown>(): OperatorFunction<T[], T[]> =>\n    scan((acc: T[], next) => acc.concat(next), [])\n\n  const results$ = useObservable(() => searchTerm$.pipe(\n    switchMap((searchTerm: string) =>\n      loadMoreEvents$.pipe(\n        countEvents(),\n        mergeMap((page: number): Observable<GetSearchPlayersResponse$Player[]> =>\n          searchPlayer(searchTerm, page * PAGE_SIZE, PAGE_SIZE).pipe(map(_ => _.items))\n        ),\n        concatEvents()\n      )\n    )\n  ))\n  logObservable(results$, \"results\")\n\n  const results = useObservableState(results$, [])\n\n  return (\n    <div className=\"search-form\">\n      <input type=\"text\" value={input} onChange={e => setInput(e.currentTarget.value)} />\n\n      <ul className=\"search-results\" ref={searhResultsListRef}>\n        {results.map((result, idx) => {\n          return <SearchResultPlayer result={result} key={result.player_id + idx} />\n        })}\n      </ul>\n    </div>\n  )\n}\n\nfunction SearchResultPlayer({ result }: { result: GetSearchPlayersResponse$Player }) {\n  return <li className=\"search-result\">\n    <Link to={`/player/${result.player_id}`}>\n      <img className=\"avatar\" src={result.avatar === \"\" ? DefaultAvatar : result.avatar} />\n      <span className=\"nickname\">{result.nickname}</span>\n    </Link>\n  </li>\n\n}\n\nfunction PlayerDetails() {\n  const { playerId } = useParams<{ playerId: string }>()\n\n  const player$ = useObservable($inputs => $inputs.pipe(\n    pluckFirst,\n    switchMap(playerId => getPlayer(playerId))\n    ),\n    [playerId]\n  )\n\n  const [showJson, setShowJson] = useState(false)\n\n  const player: GetPlayerResponse | undefined = useObservableState<GetPlayerResponse>(player$)\n\n  if (!player || player.player_id !== playerId) {\n    return (<p>Loading...</p>)\n  } else {\n    return (\n      <>\n        <div className=\"player\">\n          <img className=\"player-avatar\" src={player.avatar === \"\" ? DefaultAvatar : player.avatar}/>\n          <div className=\"player-info\">\n            <h2>{player.nickname} ({player.country})</h2>\n            <ul>\n              <li><a href={`https://www.faceit.com/en/players/${player.nickname}`}>FACEIT profile</a></li>\n              {player.steam_id_64 && <li><a href={`https://steamcommunity.com/profiles/${player.steam_id_64}`}>Steam profile</a></li>}\n              {player.games?.csgo?.faceit_elo && <li>CS:GO elo {player.games.csgo.faceit_elo}</li>}\n            </ul>\n          </div>\n        </div>\n\n        <div>\n          <button onClick={() => setShowJson(!showJson)}>Show JSON</button>\n          {showJson && <DebugValue name=\"player\" value={player} />}\n        </div>\n\n        <MatchList playerId={player.player_id} />\n      </>\n    )\n  }\n}\n\nfunction MatchList({ playerId }: { playerId: string }) {\n  const matches$ = useObservable(inputs$ => inputs$.pipe(\n    pluckFirst,\n    switchMap(playerId => getMatchHistory(playerId, \"csgo\")),\n    map(_ => _.items)\n  ), [playerId])\n  const matches = useObservableState(matches$, [])\n\n  return (\n\n    <div className=\"match-history\">\n      <h2>Match history</h2>\n      {matches.map(match => {\n        return <Match key={match.match_id} playerId={playerId} matchId={match.match_id} />\n      })}\n    </div>\n  )\n}\n\nfunction Match({ playerId, matchId }: { playerId: string, matchId: string }) {\n  const match$ = useObservable(inputs$ => inputs$.pipe(\n    pluckFirst,\n    switchMap(matchId => getMatch(matchId))\n  ), [matchId])\n\n  const match = useObservableState(match$, undefined)\n\n  if (!match || matchId !== match.match_id) {\n    return <p>Loading...</p>\n  }\n\n  return (\n    <div className={\"match\"}>\n      {match.version === 2 && <MatchV2 match={match} playerId={playerId} />}\n      {match.version === 1 && <MatchV1 match={match} playerId={playerId} />}\n\n    </div>\n  )\n}\nfunction MatchV1({ match, playerId }: { match: GetMatchResponse$MatchV1, playerId: string}) {\n  return <p>TODO</p>\n}\n\nfunction MatchV2({ match, playerId }: { match: GetMatchResponse$MatchV2, playerId: string }) {\n  const isInTeam = (team: GetMatchResponse$MatchV2$Faction, playerId: string) =>\n    team.roster.find(p => p.player_id === playerId)\n  const TeamName = ({ team }: { team: GetMatchResponse$MatchV2$Faction}) =>\n    <span className={isInTeam(team, playerId) ? \"home-team\" : \"enemy-team\"}>{team.name}</span>\n\n  const [open, setOpen] = useState(false)\n\n  const winnerTeam = match.teams[match.results.winner]\n  const isWinner = isInTeam(winnerTeam, playerId)\n  const winOrLoss = isWinner\n    ? <span className=\"win\">WIN</span>\n    : <span className=\"loss\">LOSS</span>\n\n  return (\n    <div>\n      <div className=\"match-header\" onClick={() => setOpen(!open)}>\n        <div className=\"result\">\n          <p>{winOrLoss}</p>\n        </div>\n        <div className=\"match-name\">\n          <p>\n            <TeamName team={match.teams.faction1}/> vs <TeamName team={match.teams.faction2}/>\n          </p>\n        </div>\n        <div className=\"timestamp\">\n          <p>{formatTime(match.started_at)}</p>\n        </div>\n        <div className=\"toggle\">\n          <p>{open ? <i className=\"fas fa-chevron-down\" /> : <i className=\"fas fa-chevron-right\" />}</p>\n        </div>\n      </div>\n      {open && <MatchV2Details match={match} />}\n    </div>\n  )\n}\n\nfunction MatchV2Details({ match }: { match: GetMatchResponse$MatchV2 }) {\n  const playerList = (team: GetMatchResponse$MatchV2$Faction) =>\n    <div className=\"team\">\n      <img className=\"avatar\" src={team.avatar === \"\" ? DefaultAvatar : team.avatar} />\n      <div className=\"players\">\n        <h2>{team.name}</h2>\n        <ul>\n          {team.roster.map(p =>\n            <li key={p.player_id}>{p.nickname}</li>\n          )}\n        </ul>\n      </div>\n    </div>\n\n  const [showJson, setShowJson] = useState(false)\n\n  return (\n    <div className=\"match-details\">\n      <div className=\"teams\">\n        {playerList(match.teams.faction1)}\n        {playerList(match.teams.faction2)}\n      </div>\n\n      <button onClick={() => setShowJson(!showJson)}>Show JSON</button>\n      {showJson && <DebugValue name=\"match\" value={match} />}\n    </div>\n  )\n}\n\nfunction formatTime(time: number): string {\n  return DateTime.fromSeconds(time).toRelative()!\n}\n\nfunction DebugValue({ name, value }: { name: string, value: any }) {\n  return (\n    <pre>{name} === {JSON.stringify(value, null, 2)}</pre>\n  )\n}\n\nrender(<App />, document.getElementById(\"app\"))\n","import {from, observable, Observable} from \"rxjs\"\nimport {flatMap} from \"rxjs/operators\";\n\nconst API_KEY = \"82592226-3fb7-41cf-941c-7098de7d84c7\"\n\ntype QueryParams = { [key: string]: string }\n\nexport interface GetSearchPlayersResponse {\n  items: Array<GetSearchPlayersResponse$Player>\n  start: number\n  end: number\n}\n\nexport interface GetSearchPlayersResponse$Player {\n  player_id: string\n  nickname: string\n  status: string\n  games: Array<{\n    name: string\n    skill_level: string\n  }>\n  country: string\n  verified: boolean\n  avatar: string\n}\n\nexport function searchPlayer(nickname: string, offset: number, limit: number): Observable<GetSearchPlayersResponse> {\n  return callApi(\"GET\", \"/search/players\", {\n    nickname,\n    game: \"csgo\",\n    offset: String(offset),\n    limit: String(limit),\n  })\n    .pipe(flatMap(response => from(response.json())))\n}\n\nexport interface GetPlayerResponse {\n  player_id: string\n  nickname: string\n  avatar: string\n  country: string\n  cover_image: string\n  cover_featured_image: string\n  infractions: {\n    last_infraction_date: string\n    afk: number\n    leaver: number\n    qm_not_checkeding: number\n    qm_not_voted: number\n  }\n  platforms: {\n    steam: string\n  }\n  games: {\n    [key: string]: GetPlayerResponse$Game\n  }\n  settings: {\n    language: string\n  }\n  bans: unknown[]\n  new_steam_id: string\n  steam_id_64: string\n  steam_nickname: string\n  membership_type: string\n  memberships: string[]\n  faceit_url: string\n}\n\nexport interface GetPlayerResponse$Game {\n  game_profile_id: string\n  region: string\n  regions: {\n    [region: string]: {\n      selected_ladder_id: string\n    }\n  }\n  skill_level_label: string\n  game_player_id: string\n  skill_level: number\n  faceit_elo: number\n  game_player_name: string\n}\n\nexport function getPlayer(playerId: string): Observable<GetPlayerResponse> {\n  return callApi(\"GET\", `/players/${playerId}`)\n    .pipe(flatMap(response => from(response.json())))\n}\n\nexport interface GetMatchHistoryResponse {\n  items: Array<{\n    match_id: string\n    game_id: string\n    region: string\n    match_type: string\n    game_mode: string\n    max_players: number\n    teams_size: number\n    teams: {\n      faction1: GetMatchHistoryResponse$Faction\n      faction2: GetMatchHistoryResponse$Faction\n    }\n    playing_players: string[]\n    competition_id: string\n    competition_name: string\n    organizer_id: string\n    status: string\n    started_at: number\n    finished_at: number\n    results: {\n      winner: 'faction1' | 'faction2'\n      score: {\n        faction1: number\n        faction2: number\n      }\n    }\n    faceit_url: string\n  }>\n  start: number\n  end: number\n  from: number\n  to: number\n}\n\nexport interface GetMatchHistoryResponse$Faction {\n  team_id: string\n  nickname: string\n  avatar: string\n  type: string\n  players: Array<{\n    player_id: string\n    nickname: string\n    avatar: string\n    skill_level: number\n    game_player_id: string\n    game_player_name: string\n    faceit_url: string\n  }>\n}\n\nexport function getMatchHistory(playerId: string, game: string): Observable<GetMatchHistoryResponse> {\n  return callApi(\"GET\", `/players/${playerId}/history`, { game })\n    .pipe(flatMap(response => from(response.json())))\n}\n\ntype GetMatchResponse = GetMatchResponse$MatchV1 | GetMatchResponse$MatchV2\n\nexport interface GetMatchResponse$MatchV1 {\n  version: 1\n  match_id: string\n}\n\nexport interface GetMatchResponse$MatchV2 {\n  version: 2\n  match_id: string\n  game: string\n  region: string\n  competition_id: string\n  competition_type: string\n  competition_name: string\n  organizer_id: string\n  teams: {\n    faction1: GetMatchResponse$MatchV2$Faction\n    faction2: GetMatchResponse$MatchV2$Faction\n  }\n  voting: {\n    voted_entity_types: string[]\n    [entity_type: string]: string[] | {\n      entities: Array<{\n        class_name: string\n        game_map_id: string\n        guid: string\n        image_ld: string\n        image_sm: string\n        name: string\n      }>\n      pick: string[]\n    }\n  }\n  calculate_elo: boolean\n  configured_at: number\n  started_at: number\n  finished_at: number\n  demo_url: string[]\n  chat_room_id: string\n  best_of: number\n  results: {\n    winner: \"faction1\" | \"faction2\"\n    score: {\n      faction1: number\n      faction2: number\n    }\n  }\n  status: string\n  faceit_url: string\n}\n\nexport interface GetMatchResponse$MatchV2$Faction {\n  faction_id: string\n  leader: string\n  avatar: string\n  roster: Array<GetMatchResponse$MatchV2$Faction$Player>\n  substituted: boolean\n  name: string\n  type: string\n}\n\nexport interface GetMatchResponse$MatchV2$Faction$Player {\n  player_id: string\n  nickname: string\n  avatar: string\n  membership: string\n  game_player_id: string\n  game_player_name: string\n  game_skill_level: number\n  anticheat_required: boolean\n}\n\nexport function getMatch(matchId: string): Observable<GetMatchResponse> {\n  return callApi(\"GET\", `/matches/${matchId}`)\n    .pipe(flatMap(response => from(response.json())))\n}\n\nexport function getMatchStats(matchId: string): Observable<any> {\n  return callApi(\"GET\", `/matches/${matchId}/stats`)\n    .pipe(flatMap(response => from(response.json())))\n}\n\nfunction callApi(method: string, path: string, params?: QueryParams): Observable<Response> {\n  const url = params\n    ? `https://open.faceit.com/data/v4${path}?${mkQueryString(params)}`\n    : `https://open.faceit.com/data/v4${path}`\n  return new Observable<Response>(observer => {\n    const abortController = new AbortController()\n    let requestDone = false\n\n    fetch(url, {\n      method,\n      headers: { \"Authorization\": `Bearer ${API_KEY}` },\n      signal: abortController.signal\n    })\n    .then(response => {\n      requestDone = true\n      observer.next(response)\n      observer.complete()\n    })\n    .catch(err => {\n      observer.error(err)\n      observer.complete()\n    })\n\n    return () => {\n      if (!requestDone) {\n        console.log(`Cancelling request in progress: ${path}`)\n        abortController.abort()\n      }\n    }\n  })\n}\n\nfunction mkQueryString(params: QueryParams): string {\n  const searchParams = new URLSearchParams()\n  Object.entries(params).forEach(([key, value]) =>\n    searchParams.append(key, value))\n  return searchParams.toString()\n}\n","export default __webpack_public_path__ + \"7a2dcae25524daba0f2f1485ce5c07e3.jpg\";","var api = require(\"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/dist/cjs.js!./style.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.push([module.id, \"@import url(https://fonts.googleapis.com/css?family=Source+Sans+Pro);\"]);\n// Module\nexports.push([module.id, \"body{font-family:'Source Sans Pro', sans-serif;color:#333;background-color:#f7f7f7}.search-form{position:fixed;top:0;left:0;overflow:none;height:100%;width:300px;display:flex;flex-direction:column}.search-form input{min-height:12px;height:12px;padding:10px}.search-form .search-results{flex-grow:1;overflow-y:scroll}.search-form .search-results .search-result a{display:flex;height:32px}.search-form .search-results .search-result a .nickname{flex-grow:1;vertical-align:middle;line-height:32px}.search-form .search-results .search-result{border-bottom:1px dashed #ddd;box-sizing:border-box}.search-form .search-results .search-result .avatar{width:32px;height:32px;margin-right:10px}.search-form ul{margin:0;padding:0}.search-form li{list-style-type:none}.search-form li.selected{background-color:#eee}.main-content{margin-left:300px}.player{display:flex;flex-direction:row}.player .player-avatar{width:170px;height:170px}.player .player-info{flex-grow:1;padding-left:20px}.match{margin:10px 0;padding:5px 0}.match .match-header{display:flex;flex-direction:row}.match .match-header .result{width:100px}.match .match-header .match-name{flex-grow:1;padding-left:20px}.match .match-header .timestamp{width:150px;padding:0 20px}.match .match-header .toggle{width:16px;padding:0 20px}.match .match-details .teams{display:flex;flex-direction:row}.match .match-details .teams .team{flex-grow:1;display:flex;flex-direction:row}.match .match-details .teams .team .avatar{width:240px;height:240px}.match .match-details .teams .team .players{flex-grow:1;padding-left:20px}.match{border:1px solid #eee;background:white;box-shadow:0px 8px 16px 0px rgba(0,0,0,0.2)}.match .match-header .result{text-align:center}.match .match-header .result .win{color:green}.match .match-header .result .loss{color:red}.match .match-header .match-name{border-left:1px solid lightgray;border-right:1px solid lightgray}.match .match-header .match-name .home-team{text-decoration:underline}.match .match-header .timestamp{text-align:center}.match .match-header .toggle{text-align:center;border-left:1px solid lightgray}.match .match-details{padding:20px;border-top:1px solid lightgray}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n"],"sourceRoot":""}